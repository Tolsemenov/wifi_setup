import RPi.GPIO as GPIO
import time
import subprocess
import threading
import os

BUTTON_PIN = 17                # –ü–∏–Ω, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
HOLD_SECONDS = 3               # –í—Ä–µ–º—è —É–¥–µ—Ä–∂–∞–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
CHECK_CLIENTS_EVERY = 10       # –ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
TIMEOUT_NO_CLIENTS = 300       # 5 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

last_client_time = time.time()

def setup_gpio():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(BUTTON_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)

def start_ap_and_web():
    global last_client_time
    last_client_time = time.time()
    print("üîß –ó–∞–ø—É—Å–∫ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")

    # –ó–∞–ø—É—Å–∫–∞–µ–º AP
    subprocess.call(['sudo', 'bash', 'setup_ap.sh'])

    # Flask-—Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
    flask_thread = threading.Thread(
        target=lambda: subprocess.call(['sudo', 'python3', 'web_server.py']))
    flask_thread.start()

    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    monitor_thread = threading.Thread(target=monitor_ap_clients)
    monitor_thread.start()

def monitor_ap_clients():
    global last_client_time
    print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç–æ—á–∫–µ –¥–æ—Å—Ç—É–ø–∞...")

    while True:
        if has_connected_clients():
            last_client_time = time.time()
            print("üì∂ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AP.")
        elif time.time() - last_client_time > TIMEOUT_NO_CLIENTS:
            print("‚ùå –ù–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–ª—Å—è –∫ AP –∑–∞ 5 –º–∏–Ω—É—Ç ‚Äî –≤—ã–∫–ª—é—á–∞–µ–º.")
            subprocess.call(['sudo', 'bash', 'stop_ap.sh'])
            subprocess.call(['sudo', 'python3', 'main.py'])
            break
        time.sleep(CHECK_CLIENTS_EVERY)

def has_connected_clients():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∫ —Ç–æ—á–∫–µ –¥–æ—Å—Ç—É–ø–∞
    output = subprocess.getoutput("nmcli dev wifi list ifname wlan0")
    return "AutoPoliv" in output and "yes" in output

def listen_button():
    pressed_time = 0
    while True:
        if GPIO.input(BUTTON_PIN) == GPIO.LOW:
            if pressed_time == 0:
                pressed_time = time.time()
            elif time.time() - pressed_time >= HOLD_SECONDS:
                print("üîò –ö–Ω–æ–ø–∫–∞ —É–¥–µ—Ä–∂–∏–≤–∞–ª–∞—Å—å ‚Äî –≤–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Wi-Fi.")
                start_ap_and_web()
                pressed_time = 0
                # –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –Ω–µ –¥–∞—ë–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞ –ø–æ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
                time.sleep(TIMEOUT_NO_CLIENTS + 5)
        else:
            pressed_time = 0
        time.sleep(0.1)

if __name__ == '__main__':
    try:
        setup_gpio()
        listen_button()
    except KeyboardInterrupt:
        GPIO.cleanup()
